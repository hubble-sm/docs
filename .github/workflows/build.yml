name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js 21
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'  # Ensure Node.js 21 is used for the build

      # Step 3: Clear npm cache to avoid potential issues with stale dependencies
      - name: Clear npm cache
        run: npm cache clean --force

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Verify installed dependencies
      - name: Verify dependencies
        run: npm ls

      # Step 6: Run the build
      - name: Run build
        run: npm run build

      # Step 7: Check if dist folder exists and contains expected files
      - name: Verify dist folder exists
        run: |
          echo "Contents of dist directory:"
          ls -la ./dist

      # Step 8: Ensure dist directory is present and build output is correct
      - name: Check dist folder existence
        run: |
          if [ ! -d "./dist" ]; then
            echo "Dist folder does not exist!";
            exit 1;
          fi

      # Step 9: Check if the deploy branch exists, create it if it doesn't
      - name: Create deploy branch if it doesn't exist
        run: |
          git fetch origin
          if git show-ref --quiet refs/heads/deploy; then
            echo "Deploy branch exists, checking out...";
            git checkout deploy
          else
            echo "Deploy branch doesn't exist, creating deploy branch...";
            git checkout --orphan deploy
          fi

      - name: Set Git user info
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "you@example.com"
        
      # Step 10: Clean the deploy branch and add only the dist files
      - name: Deploy to deploy branch
        run: |
          # Remove all files except dist/ folder
          git ls-tree --name-only HEAD | grep -v "^dist/" | xargs git rm -rf
          # Copy dist folder contents to root (or wherever you need them)
          cp -r dist/* .  # Make sure you're copying the actual files from dist
          # Stage and commit the changes
          git add .  # Only the new contents of the dist directory
          git commit -m "Deploy new build from dist"
          # Push the changes to the deploy branch
          git push origin deploy --force
